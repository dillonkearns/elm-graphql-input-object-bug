-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Jurisdiction exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The ID of an object
-}
id : SelectionSet Api.ScalarCodecs.Id Api.Object.Jurisdiction
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


name : SelectionSet (Maybe String) Api.Object.Jurisdiction
name =
    Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


status : SelectionSet (Maybe String) Api.Object.Jurisdiction
status =
    Object.selectionForField "(Maybe String)" "status" [] (Decode.string |> Decode.nullable)


population : SelectionSet (Maybe Int) Api.Object.Jurisdiction
population =
    Object.selectionForField "(Maybe Int)" "population" [] (Decode.int |> Decode.nullable)


density : SelectionSet (Maybe Int) Api.Object.Jurisdiction
density =
    Object.selectionForField "(Maybe Int)" "density" [] (Decode.int |> Decode.nullable)


timezone : SelectionSet (Maybe String) Api.Object.Jurisdiction
timezone =
    Object.selectionForField "(Maybe String)" "timezone" [] (Decode.string |> Decode.nullable)


lonlat : SelectionSet (Maybe Api.ScalarCodecs.Point) Api.Object.Jurisdiction
lonlat =
    Object.selectionForField "(Maybe ScalarCodecs.Point)" "lonlat" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecPoint |> .decoder |> Decode.nullable)


insertedAt : SelectionSet (Maybe String) Api.Object.Jurisdiction
insertedAt =
    Object.selectionForField "(Maybe String)" "insertedAt" [] (Decode.string |> Decode.nullable)


updatedAt : SelectionSet (Maybe String) Api.Object.Jurisdiction
updatedAt =
    Object.selectionForField "(Maybe String)" "updatedAt" [] (Decode.string |> Decode.nullable)


displayName : SelectionSet (Maybe String) Api.Object.Jurisdiction
displayName =
    Object.selectionForField "(Maybe String)" "displayName" [] (Decode.string |> Decode.nullable)


parent :
    SelectionSet decodesTo Api.Object.Jurisdiction
    -> SelectionSet (Maybe decodesTo) Api.Object.Jurisdiction
parent object_ =
    Object.selectionForCompositeField "parent" [] object_ (identity >> Decode.nullable)


forms :
    SelectionSet decodesTo Api.Object.Form
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Api.Object.Jurisdiction
forms object_ =
    Object.selectionForCompositeField "forms" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


projects :
    SelectionSet decodesTo Api.Object.Project
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Api.Object.Jurisdiction
projects object_ =
    Object.selectionForCompositeField "projects" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


users :
    SelectionSet decodesTo Api.Object.User
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Api.Object.Jurisdiction
users object_ =
    Object.selectionForCompositeField "users" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
