-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Annotation exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The ID of an object
-}
id : SelectionSet Api.ScalarCodecs.Id Api.Object.Annotation
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


body : SelectionSet (Maybe String) Api.Object.Annotation
body =
    Object.selectionForField "(Maybe String)" "body" [] (Decode.string |> Decode.nullable)


shapes :
    SelectionSet decodesTo Api.Union.ShapeUnion
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Api.Object.Annotation
shapes object_ =
    Object.selectionForCompositeField "shapes" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


status : SelectionSet (Maybe String) Api.Object.Annotation
status =
    Object.selectionForField "(Maybe String)" "status" [] (Decode.string |> Decode.nullable)


isResolved : SelectionSet (Maybe Bool) Api.Object.Annotation
isResolved =
    Object.selectionForField "(Maybe Bool)" "isResolved" [] (Decode.bool |> Decode.nullable)


insertedAt : SelectionSet (Maybe String) Api.Object.Annotation
insertedAt =
    Object.selectionForField "(Maybe String)" "insertedAt" [] (Decode.string |> Decode.nullable)


updatedAt : SelectionSet (Maybe String) Api.Object.Annotation
updatedAt =
    Object.selectionForField "(Maybe String)" "updatedAt" [] (Decode.string |> Decode.nullable)


page :
    SelectionSet decodesTo Api.Object.Page
    -> SelectionSet (Maybe decodesTo) Api.Object.Annotation
page object_ =
    Object.selectionForCompositeField "page" [] object_ (identity >> Decode.nullable)


user :
    SelectionSet decodesTo Api.Object.User
    -> SelectionSet (Maybe decodesTo) Api.Object.Annotation
user object_ =
    Object.selectionForCompositeField "user" [] object_ (identity >> Decode.nullable)


comments :
    SelectionSet decodesTo Api.Object.Comment
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Api.Object.Annotation
comments object_ =
    Object.selectionForCompositeField "comments" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
