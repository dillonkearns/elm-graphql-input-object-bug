-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Mutation exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias CreatePunchListItemOptionalArguments =
    { shapes : OptionalArgument (List (Maybe Api.InputObject.ShapeInput)) }


createPunchListItem :
    (CreatePunchListItemOptionalArguments -> CreatePunchListItemOptionalArguments)
    -> SelectionSet String RootMutation
createPunchListItem fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { shapes = Absent }

        optionalArgs =
            [ Argument.optional "shapes" filledInOptionals.shapes (Api.InputObject.encodeShapeInput |> Encode.maybe |> Encode.list) ]
                |> List.filterMap identity
    in
    Object.selectionForField "String" "createPunchListItem" optionalArgs Decode.string
